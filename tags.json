{
  "addtag": "In order to add a tag to the bot, make a pr to the commands repo here: <https://github.com/u9g/fluffy-disco-commands>",
  "addtags": "In order to add a tag to the bot, make a pr to the commands repo here: <https://github.com/u9g/fluffy-disco-commands>",
  "click": "All of the following assumes that you have already opened the desired window.\nTo click on an item in a window use: `bot.clickWindow(<slot>, <mouse_button>, <mode>)`\n\nThis will return a `Promise` of type `void`, which means it can be awaited.\n`<slot>` is the `item.slot` of the item you want to click on in the window.\n`<mouse_button>` is `0` for left click, and `1` for right click.\n`<mode>` is the mode of the click, mineflayer only supports `0` for this.\nTo get more info:\n<https://github.com/PrismarineJS/mineflayer/blob/master/docs/api.md#botclickwindowslot-mousebutton-mode-cb>",
  "clickWindow": "All of the following assumes that you have already opened the desired window.\nTo click on an item in a window use: `bot.clickWindow(<slot>, <mouse_button>, <mode>)`\n\nThis will return a `Promise` of type `void`, which means it can be awaited.\n`<slot>` is the `item.slot` of the item you want to click on in the window.\n`<mouse_button>` is `0` for left click, and `1` for right click.\n`<mode>` is the mode of the click, mineflayer only supports `0` for this.\nTo get more info:\n<https://github.com/PrismarineJS/mineflayer/blob/master/docs/api.md#botclickwindowslot-mousebutton-mode-cb>",
  "jsfirst": "**If you are writing a Mineflayer bot for the first time please read the following**\nA Mineflayer bot is not a simple task. Sure, you can use a Mineflayer bot to learn a language, but unless you are proficient in other languages it is not a beginner task.\n\nA Mineflayer bot consists of many different moving parts with varying degrees of complexity. As a developer you must be able to _understand_ these components.\n\nIf you are interested in becoming a programmer or writing Mineflayer bots in the future it is highly recommend learning the language to an intermediate level beforehand.\n\nTo fully learn the language, you can take a look at:\n- <https://github.com/PrismarineJS/mineflayer/blob/master/docs/tutorial.md>\n- <https://javascript.info/>\n- <https://developer.mozilla.org/en-US/docs/Web/JavaScript> \n\nWhy am I asking you to learn the language properly?\n Look at <https://meta.stackoverflow.com/a/258208> for the reason why.",
  "links": "https://gist.github.com/u9g/f984343c091714040790c93d995f1a36",
  "microsoft": "To use microsoft auth with mineflayer, add the key `auth: 'microsoft'` to your `mineflayer.createBot()`:\n```diff\nconst bot = mineflayer.createBot({\n  host: 'localhost',\n  port: 25565,\n  username: 'email@example.com',\n  password: '12345678',\n+ auth: 'microsoft'\n})\n```",
  "proxy": "To use a proxy with mineflayer, add the key `connect` to your `mineflayer.createBot()` like this:\n```diff\nconst bot = mineflayer.createBot({\n+  connect: (client) => {\n+    socks.createConnection({\n+      proxy: {\n+        host: <proxy_ip/proxy_host>,\n+        port: <myProxyPort>,'\n+        type: 5,\n+        userId: '<proxy_username>',\n+        password: '<proxy_password>'\n+      },\n+      command: 'connect',\n+      destination: {\n+        host: '<mc_server_host/ip>',\n+        port: <mc_server_port>\n+      }\n+    }, (err, info) => {\n+      if (err) {\n+        console.log(err)\n+        return\n+      }\n+      client.setSocket(info.socket)\n+      client.emit('connect')\n+    })\n+  },\n- host: 'localhost'\n  username: <mc_username>,\n  password: <mc_password>\n})\n```",
  "rte": "https://i.imgur.com/6ffiHIj.png",
  "sleep": "JavaScript Promise based sleep\n```js\nconst sleep = ms => new Promise((resolve) => setTimeout(resolve, ms))\n```Usage```js\nasync function init() {\n  // do action \n  await sleep(500) // wait 500 ms\n  // do other stuff\n}```",
  "api": "<https://github.com/PrismarineJS/mineflayer/blob/master/docs/api.md>",
  "block": "https://github.com/PrismarineJS/prismarine-block",
  "cb": "Use codeblocks for formatting code:\n\\`\\`\\`js\n<your code here>\n\\`\\`\\`\n\nProduces:\n```js\nif (true) {\n  console.log('Hello World!')\n}\n```",
  "chat": "https://github.com/PrismarineJS/prismarine-chat",
  "chunk": "https://github.com/PrismarineJS/prismarine-chunk",
  "code": "Give me your code! It will be easier for the both of us, and will make debugging way easier. \nPlease **use <https://privatebin.net/>, <https://gist.github.com/>, or <https://hastebin.com/> **",
  "debug": "In order to debug mineflayer, add this line to the top of your code: \n`process.env.DEBUG = 'minecraft-protocol'`",
  "does not work": "Against popular belief \"does not work\" is not sufficient information to provide to receive help.\nWhat's the expected (wanted) behaviour, what's the actual (unwanted) behaviour? Do you get any errors? What's your relevant code that might be causing the issue?",
  "dontasktoask": "Don't ask if you can ask a question, just ask it! If someone knows the answer, they'll do their best to help.\nRead: <https://dontasktoask.com/>",
  "entity": "https://github.com/PrismarineJS/prismarine-entity",
  "example": "All of the mineflayer examples are available here: <https://github.com/PrismarineJS/mineflayer/tree/master/examples>",
  "examples": "All of the mineflayer examples are available here: <https://github.com/PrismarineJS/mineflayer/tree/master/examples>",
  "help": "* `/tag [tag]` to use a tag\n* `/tag help` to show this command\n* `/list` to list all tags",
  "item": "https://github.com/PrismarineJS/prismarine-item",
  "mcd": "<https://minecraft-data.prismarine.js.org>",
  "mcdata": "https://github.com/PrismarineJS/minecraft-data",
  "mineflayer": "https://github.com/PrismarineJS/mineflayer",
  "movebot": "If you have a goal where you want your bot to go, use `mineflayer-pathfinder` otherwise use `bot.setControlState`\nSee: mineflayer-pathfinder: <https://github.com/PrismarineJS/mineflayer-pathfinder>",
  "nomouse": "There is no concept of mouse clicking with Mineflayer as it does not simulate mouse clicks. All Mineflayer can do is perform specific actions that happen as a result of clicking in the Minecraft client.\nRight Mouse could be: `bot.placeBlock`, `bot.activateItem`, `bot.openChest` and so on\nLeft Mouse could be: `bot.attack` or `bot.swingArm`\nAnd if you want to get the block the bot is currently looking at use `bot.blockAtCursor`",
  "physics": "https://github.com/PrismarineJS/prismarine-physics",
  "sharecode": "Give me your code! It will be easier for the both of us, and will make debugging way easier. \nPlease **use <https://privatebin.net/>, <https://gist.github.com/>, or <https://hastebin.com/> **",
  "tryandsee": "https://tryitands.ee/",
  "tryit": "https://tryitands.ee/",
  "windows": "https://github.com/PrismarineJS/prismarine-windows",
  "xy": "> The XY problem is asking about your attempted solution rather than your actual problem. This leads to enormous amounts of wasted time and energy, both on the part of people asking for help, and on the part of those providing help.\n\n From: <https://xyproblem.info/>",
  "error": "```js\nbot.on('error', console.log)\nbot.on('kicked', console.log)\n```"
}
